2022-07-19 17:07:10,881 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.4, 'c2': 0.5, 'w': 0.9}
2022-07-19 17:08:00,661 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.4, 'c2': 0.5, 'w': 0.9}
2022-07-19 17:08:37,645 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.004583333333333384, best pos: [0.94765]
2022-07-19 17:09:16,911 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.4, 'c2': 0.5, 'w': 0.9}
2022-07-19 17:09:52,337 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.4, 'c2': 0.5, 'w': 0.9}
2022-07-19 17:12:33,205 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.4, 'c2': 0.5, 'w': 0.9}
2022-07-19 17:12:50,739 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.4, 'c2': 0.5, 'w': 0.9}
2022-07-19 17:13:12,616 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.4, 'c2': 0.5, 'w': 0.9}
2022-07-19 17:13:30,509 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.4, 'c2': 0.5, 'w': 0.9}
2022-07-19 17:15:49,284 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.26371794871794874, best pos: [1.24549]
2022-07-19 17:20:25,567 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-19 17:32:08,471 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-19 17:33:30,526 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-19 17:34:02,226 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-19 17:36:35,353 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [148.5428]
2022-07-19 17:36:50,473 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-19 17:38:18,942 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-19 17:42:52,497 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [131.22961]
2022-07-19 17:44:49,682 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-19 17:50:19,930 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0015873015873015817, best pos: [57.5]
2022-07-19 17:52:34,043 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-19 18:06:42,488 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.008928571428571508, best pos: [222.99993]
2022-07-19 18:12:23,306 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-19 18:26:32,715 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.007359307359307343, best pos: [226.68264]
2022-07-20 09:44:31,685 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-20 09:49:47,408 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.005757575757575628, best pos: [236.87899]
2022-07-20 09:57:08,534 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-20 09:58:47,443 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-20 09:59:18,300 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-20 10:00:22,202 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-20 10:06:31,916 - pyswarms.single.global_best - INFO - Optimize for 2 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-20 10:07:24,432 - pyswarms.single.global_best - INFO - Optimize for 2 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-20 10:07:33,536 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.33757859063867546, best pos: [109.33375 797.0366 ]
2022-07-20 10:09:28,885 - pyswarms.single.global_best - INFO - Optimize for 4 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-20 10:11:18,396 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.46005410274931735, best pos: [992.98473 685.60787]
2022-07-20 10:16:57,153 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (2,)
Traceback (most recent call last):
  File "C:\Users\Jackson\AppData\Local\Programs\Python\Python38\lib\site-packages\pyswarms\backend\generators.py", line 65, in generate_swarm
    np.all(bounds[0] <= init_pos) and np.all(init_pos <= bounds[1])
ValueError: operands could not be broadcast together with shapes (2,) (2,5) 
2022-07-20 10:18:42,469 - pyswarms.single.global_best - INFO - Optimize for 4 iters with {'c1': 0.6, 'c2': 0.6, 'w': 0.9}
2022-07-20 10:19:30,998 - pyswarms.single.global_best - INFO - Optimize for 4 iters with {'c1': 0.6, 'c2': 0.6, 'w': 0.9}
2022-07-20 10:22:00,370 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0027272727272728003, best pos: [186.18474 196.3603 ]
2022-07-20 10:26:56,521 - pyswarms.single.global_best - INFO - Optimize for 5 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-20 10:30:25,090 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0018181818181818299, best pos: [123.86354 123.41613]
2022-07-20 10:33:43,912 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-20 10:34:18,389 - pyswarms.single.global_best - INFO - Optimize for 5 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-20 10:36:21,878 - pyswarms.single.global_best - INFO - Optimize for 5 iters with {'c1': 0.8, 'c2': 0.5, 'w': 0.9}
2022-07-20 10:42:41,745 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0033766233766234777, best pos: [328.18026 114.59308]
2022-07-20 10:45:34,638 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.6, 'c2': 0.3, 'w': 0.9}
2022-07-20 11:05:30,497 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0018181818181818299, best pos: [148.51714 109.31079]
2022-07-20 11:08:08,372 - pyswarms.single.global_best - INFO - Optimize for 20 iters with {'c1': 0.6, 'c2': 0.3, 'w': 0.9}
2022-07-20 11:23:47,382 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.1, 'c2': 0.1, 'w': 0.9}
2022-07-20 11:23:48,071 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [5.46726402 6.65717235]
2022-07-20 11:24:20,830 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.1, 'c2': 0.1, 'w': 0.9}
2022-07-20 11:24:21,261 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [3.35108641 2.9505177 ]
2022-07-20 11:24:40,860 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.1, 'c2': 0.1, 'w': 0.9}
2022-07-20 11:24:41,258 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [3.32393189 2.97694453]
2022-07-20 11:25:16,914 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.01, 'c2': 0.01, 'w': 0.9}
2022-07-20 11:25:17,338 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [3.96552769 2.47117993]
2022-07-20 11:25:44,515 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.9, 'c2': 0.9, 'w': 0.9}
2022-07-20 11:25:44,884 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [3.76862882 2.96388365]
2022-07-20 11:48:54,849 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0031955922865013475, best pos: [131.459   170.54497]
2022-07-20 11:50:03,920 - pyswarms.single.global_best - INFO - Optimize for 14 iters with {'c1': 0.2, 'c2': 0.1, 'w': 0.9}
2022-07-20 12:00:57,517 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.9, 'c2': 0.9, 'w': 0.5}
2022-07-20 12:00:57,957 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 106.0, best pos: [1.07664669 1.04397993]
2022-07-20 12:03:24,867 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.9, 'c2': 0.9, 'w': 0.5}
2022-07-20 12:03:25,237 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 8.0, best pos: [-3.87146779 -2.98907345]
2022-07-20 12:04:54,632 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.9, 'c2': 0.9, 'w': 0.5}
2022-07-20 12:04:55,176 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 3.58442834 -1.84812653]
2022-07-20 12:04:55,201 - pyswarms.utils.plotters.plotters - ERROR - Please check your input type
Traceback (most recent call last):
  File "C:\Users\Jackson\AppData\Local\Programs\Python\Python38\lib\site-packages\pyswarms\utils\plotters\plotters.py", line 222, in plot_contour
    ax.contour(xx, yy, zz, levels=mesher.levels)
  File "C:\Users\Jackson\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\__init__.py", line 1361, in inner
    return func(ax, *map(sanitize_sequence, args), **kwargs)
  File "C:\Users\Jackson\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\axes\_axes.py", line 6420, in contour
    contours = mcontour.QuadContourSet(self, *args, **kwargs)
  File "C:\Users\Jackson\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\contour.py", line 777, in __init__
    kwargs = self._process_args(*args, **kwargs)
  File "C:\Users\Jackson\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\contour.py", line 1366, in _process_args
    x, y, z = self._contour_args(args, kwargs)
  File "C:\Users\Jackson\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\contour.py", line 1424, in _contour_args
    x, y, z = self._check_xyz(args[:3], kwargs)
  File "C:\Users\Jackson\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\contour.py", line 1454, in _check_xyz
    raise TypeError(f"Input z must be at least a (2, 2) shaped array, "
TypeError: Input z must be at least a (2, 2) shaped array, but has shape (0, 0)
2022-07-20 12:05:00,681 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.9, 'c2': 0.9, 'w': 0.5}
2022-07-20 12:05:01,099 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 3.58442834 -1.84812653]
2022-07-20 12:05:01,124 - pyswarms.utils.plotters.plotters - ERROR - Please check your input type
Traceback (most recent call last):
  File "C:\Users\Jackson\AppData\Local\Programs\Python\Python38\lib\site-packages\pyswarms\utils\plotters\plotters.py", line 222, in plot_contour
    ax.contour(xx, yy, zz, levels=mesher.levels)
  File "C:\Users\Jackson\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\__init__.py", line 1361, in inner
    return func(ax, *map(sanitize_sequence, args), **kwargs)
  File "C:\Users\Jackson\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\axes\_axes.py", line 6420, in contour
    contours = mcontour.QuadContourSet(self, *args, **kwargs)
  File "C:\Users\Jackson\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\contour.py", line 777, in __init__
    kwargs = self._process_args(*args, **kwargs)
  File "C:\Users\Jackson\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\contour.py", line 1366, in _process_args
    x, y, z = self._contour_args(args, kwargs)
  File "C:\Users\Jackson\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\contour.py", line 1424, in _contour_args
    x, y, z = self._check_xyz(args[:3], kwargs)
  File "C:\Users\Jackson\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\contour.py", line 1454, in _check_xyz
    raise TypeError(f"Input z must be at least a (2, 2) shaped array, "
TypeError: Input z must be at least a (2, 2) shaped array, but has shape (0, 0)
2022-07-20 12:07:11,375 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.1, 'c2': 0.1, 'w': 0.9}
2022-07-20 12:07:11,807 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 4.333723238232037e-51, best pos: [-6.27394036e-26 -1.99371633e-26]
2022-07-20 12:07:44,150 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.1, 'c2': 0.1, 'w': 0.9}
2022-07-20 12:07:44,608 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [3. 2.]
2022-07-20 12:08:51,323 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.1, 'c2': 0.1, 'w': 0.9}
2022-07-20 12:08:52,016 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [3. 2.]
2022-07-20 12:09:34,434 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.1, 'c2': 0.1, 'w': 0.5}
2022-07-20 12:09:34,985 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 11.884924481127856, best pos: [3.20036553 0.59661238]
2022-07-20 12:10:05,801 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.9, 'c2': 0.9, 'w': 0.5}
2022-07-20 12:10:06,326 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [3. 2.]
2022-07-20 12:10:32,748 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.8, 'c2': 0.4, 'w': 0.1}
2022-07-20 12:10:33,214 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0011046479368123196, best pos: [2.99404951 2.00295576]
2022-07-20 12:10:53,335 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.8, 'c2': 0.6, 'w': 0.1}
2022-07-20 12:10:53,912 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.3751830398612548e-06, best pos: [-3.77949921 -3.28314428]
2022-07-20 12:11:15,852 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.8, 'c2': 0.6, 'w': 0.2}
2022-07-20 12:11:16,318 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 3.220758194705966, best pos: [-3.74236605 -2.99128296]
2022-07-20 12:11:34,009 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.8, 'c2': 0.8, 'w': 0.1}
2022-07-20 12:11:34,491 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.009559963274790367, best pos: [-2.80648193  3.1159289 ]
2022-07-20 12:12:05,824 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.8, 'c2': 0.8, 'w': 0.1}
2022-07-20 12:12:06,518 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.006316615587554255, best pos: [-3.78907279 -3.29150193]
2022-07-20 12:12:26,688 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.8, 'c2': 0.8, 'w': 0.1}
2022-07-20 12:12:27,140 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 6.6091377697122176e-06, best pos: [-2.80466697  3.13131472]
2022-07-20 12:14:34,340 - pyswarms.single.global_best - INFO - Optimize for 14 iters with {'c1': 0.8, 'c2': 0.8, 'w': 0.1}
2022-07-20 12:34:33,186 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.003365360926336436, best pos: [343.94179 173.79976]
2022-07-20 12:44:04,394 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.001212121212121331, best pos: [206.74882 174.92193]
2022-07-20 13:10:03,993 - pyswarms.single.global_best - INFO - Optimize for 2 iters with {'c1': 0.8, 'c2': 0.8, 'w': 0.1}
2022-07-20 13:10:36,467 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.005874125874125835, best pos: [231.01157  81.01231]
2022-07-20 13:14:12,272 - pyswarms.single.global_best - INFO - Optimize for 3 iters with {'c1': 0.8, 'c2': 0.8, 'w': 0.1}
2022-07-20 13:14:38,538 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.012516950077925748, best pos: [201.00314 107.03682]
2022-07-20 13:14:38,607 - matplotlib.animation - WARNING - MovieWriter imagemagick unavailable; using Pillow instead.
2022-07-20 13:14:38,607 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.PillowWriter'>
2022-07-20 13:16:07,514 - pyswarms.single.global_best - INFO - Optimize for 4 iters with {'c1': 0.8, 'c2': 0.8, 'w': 0.1}
2022-07-20 13:18:05,458 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0063810263810264445, best pos: [206.9278   85.47146]
2022-07-20 13:18:05,538 - matplotlib.animation - WARNING - MovieWriter imagemagick unavailable; using Pillow instead.
2022-07-20 13:18:05,539 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.PillowWriter'>
2022-07-20 13:19:28,534 - pyswarms.single.global_best - INFO - Optimize for 4 iters with {'c1': 0.9, 'c2': 0.7, 'w': 0.2}
2022-07-20 13:21:04,291 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.007662337662337593, best pos: [177.48329 187.56895]
2022-07-20 13:21:04,379 - matplotlib.animation - WARNING - MovieWriter imagemagick unavailable; using Pillow instead.
2022-07-20 13:21:04,379 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.PillowWriter'>
2022-07-20 13:32:03,834 - pyswarms.single.global_best - INFO - Optimize for 4 iters with {'c1': 0.9, 'c2': 0.7, 'w': 0.2}
2022-07-20 13:35:34,115 - pyswarms.single.global_best - INFO - Optimize for 4 iters with {'c1': 0.9, 'c2': 0.7, 'w': 0.2}
2022-07-20 13:37:52,508 - pyswarms.single.global_best - INFO - Optimize for 4 iters with {'c1': 0.9, 'c2': 0.7, 'w': 0.2}
2022-07-20 13:38:48,489 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.16640392993520647, best pos: [321. 464.]
2022-07-20 13:38:48,571 - matplotlib.animation - WARNING - MovieWriter imagemagick unavailable; using Pillow instead.
2022-07-20 13:38:48,571 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.PillowWriter'>
2022-07-20 13:39:36,804 - pyswarms.single.global_best - INFO - Optimize for 20 iters with {'c1': 0.9, 'c2': 0.7, 'w': 0.2}
2022-07-20 14:00:49,410 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.8, 'c2': 0.8, 'w': 0.1}
2022-07-20 14:00:49,909 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.14711539313868072, best pos: [ 3.57302045 -1.744718  ]
2022-07-20 14:00:50,310 - matplotlib.animation - WARNING - MovieWriter imagemagick unavailable; using Pillow instead.
2022-07-20 14:00:50,311 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.PillowWriter'>
2022-07-20 14:01:47,782 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.8, 'c2': 0.8, 'w': 0.1}
2022-07-20 14:01:48,304 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.004809034533762228, best pos: [3.01239025 1.99355679]
2022-07-20 14:01:48,693 - matplotlib.animation - WARNING - MovieWriter imagemagick unavailable; using Pillow instead.
2022-07-20 14:01:48,693 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.PillowWriter'>
2022-07-20 14:02:37,560 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.8, 'c2': 0.8, 'w': 0.1}
2022-07-20 14:02:37,977 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22451819999803374, best pos: [2.98613665 1.89213291]
2022-07-20 14:02:38,001 - matplotlib.animation - WARNING - MovieWriter imagemagick unavailable; using Pillow instead.
2022-07-20 14:02:38,002 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.PillowWriter'>
2022-07-20 14:02:54,667 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.8, 'c2': 0.8, 'w': 0.1}
2022-07-20 14:02:55,096 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.0722822205737785, best pos: [3.07343222 1.70349741]
2022-07-20 14:02:55,467 - matplotlib.animation - WARNING - MovieWriter imagemagick unavailable; using Pillow instead.
2022-07-20 14:02:55,468 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.PillowWriter'>
2022-07-20 14:03:04,200 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.8, 'c2': 0.8, 'w': 0.1}
2022-07-20 14:03:04,637 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.486177833119061, best pos: [-2.81587046  2.66642829]
2022-07-20 14:03:34,065 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.8, 'c2': 0.8, 'w': 0.1}
2022-07-20 14:03:34,588 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 8.410860577895571, best pos: [-3.36436172 -3.07694242]
2022-07-20 14:04:01,386 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.9, 'c2': 0.6, 'w': 0.4}
2022-07-20 14:04:01,849 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [3. 2.]
2022-07-20 14:04:18,571 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.9, 'c2': 0.6, 'w': 0.4}
2022-07-20 14:04:19,070 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 3.58442834 -1.84812653]
2022-07-20 14:04:47,243 - pyswarms.single.global_best - INFO - Optimize for 300 iters with {'c1': 0.9, 'c2': 0.6, 'w': 0.4}
2022-07-20 14:04:47,455 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.888609052210118e-31, best pos: [-2.80511809  3.13131252]
2022-07-20 14:27:31,785 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.001994465918516597, best pos: [299.03002 154.54467]
2022-07-20 14:27:31,870 - matplotlib.animation - WARNING - MovieWriter imagemagick unavailable; using Pillow instead.
2022-07-20 14:27:31,870 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.PillowWriter'>
2022-07-20 14:29:19,034 - pyswarms.single.global_best - INFO - Optimize for 20 iters with {'c1': 0.9, 'c2': 0.6, 'w': 0.4}
2022-07-20 14:31:55,201 - pyswarms.single.global_best - INFO - Optimize for 20 iters with {'c1': 0.9, 'c2': 0.6, 'w': 0.4}
2022-07-20 14:34:27,257 - pyswarms.single.global_best - INFO - Optimize for 20 iters with {'c1': 0.9, 'c2': 0.6, 'w': 0.4}
2022-07-20 14:44:49,908 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.12392685305518836, best pos: [142.54497  66.84964]
2022-07-20 14:44:49,993 - matplotlib.animation - WARNING - MovieWriter imagemagick unavailable; using Pillow instead.
2022-07-20 14:44:49,993 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.PillowWriter'>
2022-07-20 14:46:27,208 - pyswarms.single.global_best - INFO - Optimize for 20 iters with {'c1': 0.9, 'c2': 0.6, 'w': 0.4}
2022-07-20 14:55:22,090 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.4660310188550204, best pos: [135.32393 177.15331]
2022-07-20 14:55:22,206 - matplotlib.animation - WARNING - MovieWriter imagemagick unavailable; using Pillow instead.
2022-07-20 14:55:22,206 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.PillowWriter'>
2022-07-20 14:58:08,565 - pyswarms.single.global_best - INFO - Optimize for 20 iters with {'c1': 0.9, 'c2': 0.6, 'w': 0.4}
2022-07-20 15:02:57,338 - pyswarms.single.global_best - INFO - Optimize for 300 iters with {'c1': 0.9, 'c2': 0.1, 'w': 0.4}
2022-07-20 15:02:57,884 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 16.320034983566348, best pos: [-2.84394772  2.4155248 ]
2022-07-20 15:03:19,387 - pyswarms.single.global_best - INFO - Optimize for 300 iters with {'c1': 0.9, 'c2': 0.0, 'w': 0.4}
2022-07-20 15:03:19,551 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 43.44718014848346, best pos: [3.95137782 1.93941593]
2022-07-20 15:03:30,183 - pyswarms.single.global_best - INFO - Optimize for 300 iters with {'c1': 0.9, 'c2': 0.0, 'w': 0.8}
2022-07-20 15:03:30,538 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 3.6278201514927844, best pos: [ 3.50427485 -1.26140067]
2022-07-20 15:03:44,024 - pyswarms.single.global_best - INFO - Optimize for 300 iters with {'c1': 1.0, 'c2': 0.0, 'w': 0.8}
2022-07-20 15:03:44,195 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.10342304797258384, best pos: [3.01882631 1.91329072]
2022-07-20 15:04:42,713 - pyswarms.single.global_best - INFO - Optimize for 300 iters with {'c1': 1.0, 'c2': 0.0, 'w': 0.8}
2022-07-20 15:04:42,845 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.0324558678162274, best pos: [ 3.60441635 -2.19249432]
2022-07-20 15:04:49,719 - pyswarms.single.global_best - INFO - Optimize for 5 iters with {'c1': 0.9, 'c2': 0.6, 'w': 0.4}
2022-07-20 15:04:56,272 - pyswarms.single.global_best - INFO - Optimize for 300 iters with {'c1': 1.0, 'c2': 0.0, 'w': 1.0}
2022-07-20 15:04:56,416 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.00017769633371329512, best pos: [-3.78028777 -3.28519136]
2022-07-20 15:05:24,876 - pyswarms.single.global_best - INFO - Optimize for 300 iters with {'c1': 0.9, 'c2': 0.0, 'w': 0.9}
2022-07-20 15:05:25,022 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0006188406193733602, best pos: [ 3.58749182 -1.85187565]
2022-07-20 15:06:08,653 - pyswarms.single.global_best - INFO - Optimize for 300 iters with {'c1': 0.9, 'c2': 0.1, 'w': 0.9}
2022-07-20 15:06:08,813 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.5195007049082557e-13, best pos: [3.         2.00000009]
2022-07-20 15:06:48,232 - pyswarms.single.global_best - INFO - Optimize for 500 iters with {'c1': 0.9, 'c2': 0.0, 'w': 0.9}
2022-07-20 15:06:48,493 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0002724860187686921, best pos: [ 3.58428057 -1.85238904]
2022-07-20 15:07:09,923 - pyswarms.single.global_best - INFO - Optimize for 500 iters with {'c1': 0.9, 'c2': 0.1, 'w': 0.9}
2022-07-20 15:07:10,222 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 4.298055949343658e-21, best pos: [-2.80511809  3.13131252]
2022-07-20 15:07:31,229 - pyswarms.single.global_best - INFO - Optimize for 500 iters with {'c1': 0.9, 'c2': 0.1, 'w': 0.9}
2022-07-20 15:07:31,495 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.117708538548932e-23, best pos: [-2.80511809  3.13131252]
2022-07-20 15:22:34,201 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5475473583104666, best pos: [190.56421 125.2725 ]
2022-07-20 15:22:34,270 - matplotlib.animation - WARNING - MovieWriter imagemagick unavailable; using Pillow instead.
2022-07-20 15:22:34,270 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.PillowWriter'>
2022-07-20 15:24:17,582 - pyswarms.single.global_best - INFO - Optimize for 20 iters with {'c1': 0.9, 'c2': 0.1, 'w': 0.9}
2022-07-20 15:25:13,341 - pyswarms.single.global_best - INFO - Optimize for 20 iters with {'c1': 0.9, 'c2': 0.1, 'w': 0.9}
